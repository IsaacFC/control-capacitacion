{"version":3,"sources":["pages/Auth/Login.js","components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","shared/useForm.js","pages/Auth/Login.module.css"],"names":["initialValues","email","localStorage","getItem","password","isSignUp","useStyles","makeStyles","root","margin","width","textTransform","formControlLabel","display","left","connect","state","loading","auth","error","isAuthenticated","token","userRole","dispatch","onAuth","isSignup","rememberMe","actions","props","useState","setRememberMe","MuiClasses","validate","fieldValues","values","temp","errors","length","setErrors","Object","every","x","useForm","handleInputChange","form","className","classes","onSubmit","e","preventDefault","style","variant","name","placeholder","label","value","replace","onChange","inputProps","maxLength","helperText","type","serverError","control","color","checked","onClick","fullWidth","submit","marginTop","formLoading","to","component","maxWidth","paper","spinner","loader","module","exports","setValues","target","resetForm","theme","spacing","Form","other","children","autoComplete"],"mappings":"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","file":"static/js/23.56e9eec1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, useForm } from '../../shared/useForm';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Container from '@material-ui/core/Container';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from './Login.module.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst initialValues = {\r\n  //Si existe el nombre de usuario en almacenamiento local\r\n  //mostrar el nombre de usuario guardado, si no existe mostrar\r\n  //el campo de rfc vacio\r\n  email: localStorage.getItem('userRfc') ? localStorage.getItem('userRfc') : '',\r\n  password: '',\r\n  isSignUp: false,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '15px',\r\n    width: '80%',\r\n    textTransform: 'uppercase',\r\n  },\r\n  formControlLabel: {\r\n    margin: '15px',\r\n    display: 'block',\r\n    left: '4em',\r\n  },\r\n});\r\n\r\nconst Login = (props) => {\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const MuiClasses = useStyles();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    if ('email' in fieldValues)\r\n      temp.email = fieldValues.email ? '' : 'Campo requerido';\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? '' : 'Campo requerido';\r\n\r\n    if ('email' in fieldValues)\r\n      temp.email =\r\n        fieldValues.email.length < 12\r\n          ? 'RFC debe contener al menos 12 caracteres'\r\n          : '';\r\n    if ('password' in fieldValues)\r\n      temp.password =\r\n        fieldValues.password.length < 6\r\n          ? 'La contraseña debe contener al menos 6 caracteres'\r\n          : '';\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '');\r\n  };\r\n\r\n  const { values, errors, setErrors, handleInputChange } = useForm(\r\n    initialValues,\r\n    true,\r\n    validate\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      props.onAuth(values.email, values.password, values.isSignup, rememberMe);\r\n    }\r\n  };\r\n\r\n  let form = (\r\n    <Form className={classes.form} onSubmit={handleSubmit}>\r\n      <h1>Login</h1>\r\n      <p>Necesita su RFC y contraseña asignada para iniciar sesion.</p>\r\n      <TextField\r\n        style={{ textTransform: 'uppercase' }}\r\n        margin='normal'\r\n        className={MuiClasses.root}\r\n        variant='standard'\r\n        name='email'\r\n        placeholder='RFC'\r\n        label='RFC'\r\n        value={values.email.replace(/\\s/g, '')}\r\n        onChange={handleInputChange}\r\n        inputProps={{ maxLength: 30 }}\r\n        error={errors.email}\r\n        helperText={errors.email}\r\n      />\r\n\r\n      <TextField\r\n        className={MuiClasses.root}\r\n        margin='dense'\r\n        variant='standard'\r\n        name='password'\r\n        placeholder='Contraseña'\r\n        label='Contraseña'\r\n        type='password'\r\n        value={values.password}\r\n        onChange={handleInputChange}\r\n        inputProps={{ maxLength: 20 }}\r\n        error={errors.password}\r\n        helperText={errors.password}\r\n      />\r\n\r\n      {props.error ? (\r\n        <p className={classes.serverError}>{props.error}</p>\r\n      ) : null}\r\n\r\n      <FormControlLabel\r\n        className={MuiClasses.formControlLabel}\r\n        control={\r\n          <Checkbox\r\n            color='primary'\r\n            checked={rememberMe}\r\n            onClick={() => setRememberMe((rememberMe) => !rememberMe)}\r\n          />\r\n        }\r\n        label='Recordar RFC'\r\n      />\r\n\r\n      <Button\r\n        type='submit'\r\n        fullWidth\r\n        variant='contained'\r\n        color='primary'\r\n        className={classes.submit}\r\n        style={{ marginTop: '15px' }}\r\n      >\r\n        INICIAR SESION\r\n      </Button>\r\n\r\n      <p>Olvidó su contraseña? Contactar a...</p>\r\n    </Form>\r\n  );\r\n  let formLoading = null;\r\n\r\n  if (props.loading) {\r\n    form = null;\r\n    formLoading = <Spinner />;\r\n  }\r\n\r\n  if (localStorage.getItem('token')) {\r\n    if (props.userRole === 'COORDINADOR') {\r\n      form = <Redirect to='/courses-overview' />;\r\n    } else {\r\n      form = <Redirect to='/mycourses' />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={props.loading ? null : classes.paper}>\r\n        {formLoading}\r\n        {form}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    userRole: state.auth.userRole,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password, isSignup, rememberMe) =>\r\n      dispatch(actions.auth(email, password, isSignup, rememberMe)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n  return <div className={classes.loader}>Loading...</div>;\r\n};\r\n\r\nexport default spinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1sqt0\",\"load7\":\"Spinner_load7__iTAw0\"};","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport function useForm(initialValues) {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '80%',\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n  return (\r\n    <form className={classes.root} autoComplete='off' {...other}>\r\n      {props.children}\r\n    </form>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Login_paper__bfA_j\",\"avatar\":\"Login_avatar__1g0Lx\",\"form\":\"Login_form__IZlev\",\"submit\":\"Login_submit__28cws\",\"options\":\"Login_options__2oaPT\",\"serverError\":\"Login_serverError__1hZIn\"};"],"sourceRoot":""}