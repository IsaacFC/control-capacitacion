{"version":3,"sources":["pages/ProfileConfig/ChangePassword/ChangePassword.js","components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","shared/useForm.js","components/Controls/Input.js","components/UI/SnackBar/SnackBar.js","pages/ProfileConfig/ChangePassword/ChangePassword.module.css"],"names":["initialValues","password","newPassword","confirmNewPassword","ChangePassword","props","useState","openSnackBar","snackBarMessage","severity","snackStatus","setSnackStatus","loading","setLoading","showPassword","setShowPassword","validate","fieldValues","values","temp","errors","length","setErrors","Object","every","x","useForm","resetForm","handleInputChange","form","className","classes","onSubmit","e","preventDefault","post","axios","then","response","catch","error","data","message","request","window","alert","console","log","config","fullWidth","name","placeholder","label","type","value","onChange","inputProps","maxLength","variant","color","submit","style","marginTop","onClick","paper","closeSnackBar","spinner","loader","module","exports","setValues","target","useStyles","makeStyles","theme","root","width","margin","spacing","Form","other","children","autoComplete","styles","Input","disabled","InputLabelProps","helperText","Alert","elevation","UserSnackBar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose"],"mappings":"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","file":"static/js/22.4bf22b37.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport classes from './ChangePassword.module.css';\r\nimport Input from '../../../components/Controls/Input';\r\nimport { Form, useForm } from '../../../shared/useForm';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SnackBar from '../../../components/UI/SnackBar/SnackBar';\r\nimport axios from 'axios';\r\n\r\nconst initialValues = {\r\n  password: '',\r\n  newPassword: '',\r\n  confirmNewPassword: '',\r\n};\r\n\r\nconst ChangePassword = (props) => {\r\n  const [snackStatus, setSnackStatus] = useState({\r\n    openSnackBar: false,\r\n    snackBarMessage: '',\r\n    severity: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    if ('password' in fieldValues)\r\n      temp.password =\r\n        fieldValues.password.length > 5\r\n          ? ''\r\n          : 'La contraseña debe contener al menos 6 caracteres';\r\n\r\n    if (values.newPassword === values.confirmNewPassword) {\r\n      if (\r\n        values.newPassword.length < 6 ||\r\n        values.confirmNewPassword.length < 6\r\n      ) {\r\n        temp.newPassword = 'La contraseña debe contener al menos 6 caracteres';\r\n        temp.confirmNewPassword =\r\n          'La contraseña debe contener al menos 6 caracteres';\r\n      } else {\r\n        temp.newPassword = '';\r\n        temp.confirmNewPassword = '';\r\n      }\r\n    } else if (values.newPassword != values.confirmNewPassword) {\r\n      temp.newPassword = 'Las contraseñas no coinciden';\r\n      temp.confirmNewPassword = 'Las contraseñas no coinciden';\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '');\r\n  };\r\n\r\n  const { values, resetForm, errors, setErrors, handleInputChange } = useForm(\r\n    initialValues,\r\n    true,\r\n    validate\r\n  );\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setLoading((loading) => !loading);\r\n      let post = {\r\n        password: values.password,\r\n        newPassword: values.newPassword,\r\n      };\r\n      //let url ='/auth/change-password'\r\n      axios\r\n        .post(\r\n          '/auth/change-password',\r\n          post\r\n        )\r\n        .then((response) => {\r\n          setLoading((loading) => !loading);\r\n          setSnackStatus({\r\n            openSnackBar: true,\r\n            severity: 'success',\r\n            snackBarMessage: 'Contraseña cambiada correctamente',\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading((loading) => !loading);\r\n          if (error.response) {\r\n            //Se realizo la peticion y el servidor respondio con un codigo de status\r\n            setSnackStatus({\r\n              openSnackBar: true,\r\n              severity: 'error',\r\n              snackBarMessage: error.response.data.message,\r\n            });\r\n          } else if (error.request) {\r\n            //Se realizo la peticion pero no se recibio una respuesta\r\n            window.alert('Error: ' + error.request.data.message);\r\n          } else {\r\n            //Algo ocurrio al preparar la peticion que desencadeno un error\r\n            console.log('Error: ' + error.message);\r\n          }\r\n          console.log(error.config);\r\n        });\r\n      resetForm(initialValues);\r\n    }\r\n  };\r\n\r\n  const showPasswordHandler = () => {\r\n    setShowPassword((showPassword) => !showPassword);\r\n  };\r\n\r\n  let form = (\r\n    <Form className={classes.form} onSubmit={handleSubmit}>\r\n      <h1>Cambiar contraseña</h1>\r\n\r\n      <Input\r\n        fullWidth={true}\r\n        name='password'\r\n        placeholder='Contraseña actual'\r\n        label='Contraseña actual'\r\n        type={showPassword ? 'text' : 'password'}\r\n        value={values.password}\r\n        onChange={handleInputChange}\r\n        inputProps={{ maxLength: 20 }}\r\n        error={errors.password}\r\n      />\r\n\r\n      <Input\r\n        name='newPassword'\r\n        placeholder='Nueva contraseña'\r\n        label='Nueva contraseña'\r\n        type={showPassword ? 'text' : 'password'}\r\n        value={values.newPassword}\r\n        onChange={handleInputChange}\r\n        inputProps={{ maxLength: 20 }}\r\n        error={errors.newPassword}\r\n      />\r\n\r\n      <Input\r\n        name='confirmNewPassword'\r\n        placeholder='Confirmar contraseña'\r\n        label='Confirmar contraseña'\r\n        type={showPassword ? 'text' : 'password'}\r\n        value={values.confirmNewPassword}\r\n        onChange={handleInputChange}\r\n        inputProps={{ maxLength: 20 }}\r\n        error={errors.confirmNewPassword}\r\n      />\r\n\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        className={classes.submit}\r\n        style={{ marginTop: '15px' }}\r\n        onClick={showPasswordHandler}\r\n      >\r\n        <VisibilityIcon />\r\n      </Button>\r\n\r\n      <Button\r\n        type='submit'\r\n        variant='contained'\r\n        color='primary'\r\n        className={classes.submit}\r\n        style={{ marginTop: '15px' }}\r\n      >\r\n        ACEPTAR\r\n      </Button>\r\n    </Form>\r\n  );\r\n\r\n  if (loading) {\r\n    form = <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      {form}\r\n      <SnackBar\r\n        openSnackBar={snackStatus.openSnackBar}\r\n        closeSnackBar={() => setSnackStatus({ openSnackBar: false })}\r\n        snackBarMessage={snackStatus.snackBarMessage}\r\n        severity={snackStatus.severity}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n  return <div className={classes.loader}>Loading...</div>;\r\n};\r\n\r\nexport default spinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1sqt0\",\"load6\":\"Spinner_load6__1ismh\",\"round\":\"Spinner_round__3laPx\"};","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport function useForm(initialValues) {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '80%',\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n  return (\r\n    <form className={classes.root} autoComplete='off' {...other}>\r\n      {props.children}\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  width: '85%',\r\n  margin: '15px',\r\n};\r\n\r\nexport default function Input(props) {\r\n  const {\r\n    name,\r\n    label,\r\n    placeholder,\r\n    value,\r\n    error = null,\r\n    onChange,\r\n    type,\r\n    disabled,\r\n    inputProps,\r\n    InputLabelProps,\r\n    className,\r\n  } = props;\r\n  return (\r\n    <TextField\r\n      className={className}\r\n      disabled={disabled}\r\n      style={styles}\r\n      variant='outlined'\r\n      label={label}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      value={value}\r\n      onChange={onChange}\r\n      type={type}\r\n      inputProps={inputProps}\r\n      InputLabelProps={InputLabelProps}\r\n      {...(error && { error: true, helperText: error })}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport SnackBar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n};\r\n\r\nconst UserSnackBar = (props) => {\r\n  const { openSnackBar, closeSnackBar, snackBarMessage, severity } = props;\r\n  return (\r\n    <SnackBar\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      open={openSnackBar}\r\n      autoHideDuration={6000}\r\n      onClose={closeSnackBar}\r\n    >\r\n      <Alert onClose={closeSnackBar} severity={severity}>\r\n        {snackBarMessage}\r\n      </Alert>\r\n    </SnackBar>\r\n  );\r\n};\r\n\r\nexport default UserSnackBar;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MuiContainer-root\":\"ChangePassword_MuiContainer-root__3jQdA\",\"paper\":\"ChangePassword_paper__3J49k\",\"form\":\"ChangePassword_form__3zvQL\",\"submit\":\"ChangePassword_submit__1tq5X\"};"],"sourceRoot":""}